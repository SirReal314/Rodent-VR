<UserControl x:Class="RodentVRSettings.Views.AirPuffersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
		     xmlns:views="clr-namespace:RodentVRSettings.Views"
			 xmlns:converters="clr-namespace:RodentVRSettings.Converters"
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<sys:Boolean x:Key="true">true</sys:Boolean>
		<sys:Boolean x:Key="false">false</sys:Boolean>
		<sys:Double x:Key="PufferSize">200</sys:Double>
		<SolidColorBrush x:Key="LeftColor">AliceBlue</SolidColorBrush>
		<SolidColorBrush x:Key="RightColor">DarkCyan</SolidColorBrush>
		<SolidColorBrush x:Key="BothColor">LightSlateGray</SolidColorBrush>
	</UserControl.Resources>
	<StackPanel Orientation="Vertical">
		<TextBlock Style="{StaticResource Description}">
			When the rodent runs into a wall, haptic feedback is given in the form of air puffs.
			<LineBreak/>
			The mechanism used to give air puff feedback is controlled by a National Instruments DAQ.
			<LineBreak/>
			Use NI MAX to determine the device names, ports, and lines that are used to control the mechanisms for air puff feedback.
			<LineBreak/>
		</TextBlock>
		<Label Content="Left Air Puffer Device Path"/>
		<TextBlock Style="{StaticResource Description}">
			When the rodent runs into a wall on its left side, this air puffer device will fire.
		</TextBlock>
		<views:DevicePathControl x:Name="devicenameAirPufferLeft" HorizontalAlignment="Left" OnDevicePathChanged="devicenameAirPufferLeft_OnDevicePathChanged" Width="{StaticResource controlWidth}"/>
		<!--<TextBox Name="devicenameAirPufferLeft" TextChanged="devicenameAirPufferLeft_OnDevicePathChanged"  HorizontalAlignment="Left" Style="{StaticResource textbox}"/>-->
		<Label Content="Right Air Puffer Device Path" />
		<TextBlock Style="{StaticResource Description}">
			When the rodent runs into a wall on its right side, this air puffer device will fire.
		</TextBlock>
		<views:DevicePathControl x:Name="devicenameAirPufferRight" HorizontalAlignment="Left" OnDevicePathChanged="devicenameAirPufferRight_OnDevicePathChanged" Width="{StaticResource controlWidth}"/>
		<!--<TextBox Name="devicenameAirPufferRight" TextChanged="tbAirPufferRightDeviceName_TextChanged"  HorizontalAlignment="Left" Style="{StaticResource textbox}"/>-->
		<Label Content="Front-Facing Angle Tolerance" />
		<TextBlock Style="{StaticResource Description}">
			When the rodent runs into a wall head on, both air puffer devices will fire.
			<LineBreak/>
			This changes the range of angles which is considered a head on collision with the wall.
		</TextBlock>
		<controls:NumericUpDown Name="nudAirPufferFrontAngle" ValueChanged="nudAirPufferFrontAngle_ValueChanged" 
								Minimum="0" Maximum="90" HasDecimals="True" StringFormat="{}{0:#.0} degrees" Interval="0.5"  
								HorizontalAlignment="Left" Speedup="False" />
		<Label Content="Visualization of Air Puffer Activation Angles" />
		<TextBlock Style="{StaticResource Description}">
			A graphical representation for the ranges of angles which will trigger the air puffers.
		</TextBlock>
		<Border HorizontalAlignment="Left" Width="{StaticResource controlWidth}" Margin="{StaticResource defaultMargin}" BorderBrush="Black" BorderThickness="1" Grid.Column="0" Grid.Row="0" Background="LightGray" >
			<Grid Margin="10">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="auto"/>
				</Grid.ColumnDefinitions>
				<Grid Grid.Column="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="30"/>
						<ColumnDefinition Width="auto"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="30"/>
						<RowDefinition Height="30"/>
						<RowDefinition Height="30"/>
					</Grid.RowDefinitions>
					<Rectangle Stroke="Black" StrokeThickness="2" Fill="White" Grid.Column="0" Grid.Row="0" Margin="4" />
					<Rectangle Stroke="Black" StrokeThickness="2" Fill="{StaticResource AccentColorBrush}" Grid.Column="0" Grid.Row="0" Margin="4" />
					<Rectangle Stroke="Black" StrokeThickness="2" Fill="White" Grid.Column="0" Grid.Row="1" Margin="4" />
					<Rectangle Stroke="Black" StrokeThickness="2" Fill="{StaticResource AccentColorBrush3}" Grid.Column="0" Grid.Row="1" Margin="4" />
					<Rectangle Stroke="Black" StrokeThickness="2" Fill="White" Grid.Column="0" Grid.Row="2" Margin="4" />
					<Rectangle Stroke="Black" StrokeThickness="2" Fill="{StaticResource AccentColorBrush4}" Grid.Column="0" Grid.Row="2" Margin="4" />
					<TextBlock Text="Both Air Puffers (Front)" Grid.Column="1" Grid.Row="0" VerticalAlignment="Center"/>
					<TextBlock Text="Left Air Puffer" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center"/>
					<TextBlock Text="Right Air Puffer" Grid.Column="1" Grid.Row="2" VerticalAlignment="Center"/>
				</Grid>


				<Ellipse Width="{StaticResource PufferSize}" Height="{StaticResource PufferSize}" Fill="White" Grid.Column="1"/>
				<views:PieSlice  x:Name="RightPufferActiveAngle" Grid.Column="1"
			Width="{StaticResource PufferSize}" Height="{StaticResource PufferSize}"
			Fill="{StaticResource AccentColorBrush4}" Stroke="White" StrokeThickness="2"
			StartAngle="270" EndAngle="90"/>
				<views:PieSlice  x:Name="LeftPufferActiveAngle" Grid.Column="1"
			Width="{StaticResource PufferSize}" Height="{StaticResource PufferSize}"
			Fill="{StaticResource AccentColorBrush3}" Stroke="White" StrokeThickness="2"
			StartAngle="90" EndAngle="270"/>

				<views:PieSlice x:Name="BothPufferActiveAngleBackground" Grid.Column="1"
			Width="{StaticResource PufferSize}" Height="{StaticResource PufferSize}" 
			Fill="White" Stroke="White" StrokeThickness="2"
			StartAngle="{Binding ElementName=nudAirPufferFrontAngle, Path=Value, Converter={converters:PufferAngleConverter}, ConverterParameter={StaticResource true}}"
			EndAngle="{Binding ElementName=nudAirPufferFrontAngle, Path=Value, Converter={converters:PufferAngleConverter}, ConverterParameter={StaticResource false}}"/>
				<views:PieSlice x:Name="BothPufferActiveAngle" Grid.Column="1"
			Width="{StaticResource PufferSize}" Height="{StaticResource PufferSize}" 
			Fill="{StaticResource AccentColorBrush}" Stroke="White" StrokeThickness="2"
			StartAngle="{Binding ElementName=nudAirPufferFrontAngle, Path=Value, Converter={converters:PufferAngleConverter}, ConverterParameter={StaticResource true}}"
			EndAngle="{Binding ElementName=nudAirPufferFrontAngle, Path=Value, Converter={converters:PufferAngleConverter}, ConverterParameter={StaticResource false}}"/>

				<Image Width="100" Height="100" Source="pack://application:,,,/resources/RodentIcon.png" Grid.Column="1" RenderOptions.BitmapScalingMode="HighQuality"/>
			</Grid>
		</Border>
	</StackPanel>
</UserControl>
