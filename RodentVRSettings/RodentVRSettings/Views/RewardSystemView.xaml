<UserControl x:Class="RodentVRSettings.Views.RewardSystemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:views="clr-namespace:RodentVRSettings.Views"
			 xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RodentVRSettings.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
	<StackPanel Orientation="Vertical">
		<TextBlock Style="{StaticResource Description}">
				When the rodent enters different regions of the maze, one of two different rewards such as sugar water or morphine can be dispensed to the rodent.
				<LineBreak/>
				The mechanism used to dispense the rewards is controlled by a National Instruments DAQ.
				<LineBreak/>
				Use NI MAX to determine the device names, ports, and lines that are used to control the reward dispenser mechanism.
		</TextBlock>
		<Label Content="Reward 1 Device Path" />
		<views:DevicePathControl x:Name="devicenameReward1" HorizontalAlignment="Left" OnDevicePathChanged="devicenameReward1_OnDevicePathChanged"/>
		<!--<TextBox Name="devicenameReward1" TextChanged="devicenameReward1_OnDevicePathChanged"  HorizontalAlignment="Left" Style="{StaticResource textbox}"/>-->
		<Label Content="Reward 2 Device Path" />
		<views:DevicePathControl x:Name="devicenameReward2" HorizontalAlignment="Left" OnDevicePathChanged="devicenameReward2_OnDevicePathChanged"/>
		<!--<TextBox Name="devicenameReward2" TextChanged="devicenameReward2_OnDevicePathChanged"  HorizontalAlignment="Left" Style="{StaticResource textbox}"/>-->
		<Label Content="Reward Regions Visualizer"/>
		<TextBlock Style="{StaticResource Description}">
				Click on the visualizer to select a reward region in the maze.
				<LineBreak/>
				Then use the settings below to change what happens when the rodent enters the region.
		</TextBlock>
		<views:MazeVisualizer Height="400" x:Name="mazeVisualizer" OnSelectedMazeIndexChanged="mazeVisualizer_OnMazeClicked" Maze="maze_01_level"/>
		<Label Name="toggleRewardTriggerIsEnabledLabel" Content="Is Reward Region Enabled?"/>
		<TextBlock Name="toggleRewardTriggerIsEnabledDescription" Style="{StaticResource Description}">
				If the currently selected Reward Region is enabled, a reward will be dispensed when the rodent first enters the region.
		</TextBlock>
		<controls:ToggleSwitch HorizontalAlignment="Left" Name="toggleRewardTriggerIsEnabled" OffLabel="" OnLabel="" IsCheckedChanged="toggleRewardTriggerIsEnabled_IsCheckedChanged"/>
		<Label Name="nudRewardTriggerDurationLabel" Content="Duration"/>
		<TextBlock Name="nudRewardTriggerDurationDescription" Style="{StaticResource Description}">
				The length of time to dispense the reward to the rodent when it enters the region.
				<LineBreak/>
				If the rodent leaves the region before the time has elapsed, the reward will stop dispensing.
				<LineBreak/>
				If the duration is 0, the reward will continue to be dispensed until the rodent leaves the region.
		</TextBlock>
		<controls:NumericUpDown HorizontalAlignment="Left" Name="nudRewardTriggerDuration" Minimum="0" Maximum="100" HasDecimals="True" StringFormat="{}{0:#.0} seconds" Interval="0.1"  ValueChanged="nudRewardTriggerDuration_ValueChanged"/>
		<Label Name="ddRewardTriggerRewardLabel" Content="Reward"/>
		<TextBlock Name="ddRewardTriggerRewardDescription" Style="{StaticResource Description}">
				The reward device to use when dispensing a reward for this region.
		</TextBlock>
		<ComboBox Name="ddRewardTriggerReward" HorizontalAlignment="Left" SelectionChanged="ddRewardTriggerReward_SelectionChanged">
			<ComboBox.Items>
				<sys:Int32>1</sys:Int32>
				<sys:Int32>2</sys:Int32>
			</ComboBox.Items>
			<ComboBox.ItemTemplate>
				<DataTemplate>
					<TextBlock Text="{Binding StringFormat=Reward {0}}"/>
				</DataTemplate>
			</ComboBox.ItemTemplate>
		</ComboBox>
		<Separator Background="Transparent" Height="50"/>
	</StackPanel>
</UserControl>
